<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.net.colin.dao.sysManage.UserInfoDAO">
  <resultMap id="BaseResultMap" type="cn.net.colin.entity.sysManage.UserInfo">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_psw" jdbcType="VARCHAR" property="userPsw" />
    <result column="user_sex" jdbcType="VARCHAR" property="userSex" />
    <result column="user_grade" jdbcType="VARCHAR" property="userGrade" />
    <result column="user_hobby" jdbcType="VARCHAR" property="userHobby" />
    <result column="user_tel" jdbcType="VARCHAR" property="userTel" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="self_introduce" jdbcType="VARCHAR" property="selfIntroduce" />
    <result column="self_blessing" jdbcType="VARCHAR" property="selfBlessing" />
    <result column="userQuestion_motherName" jdbcType="VARCHAR" property="userquestionMothername" />
    <result column="userQuestion_firstLove" jdbcType="VARCHAR" property="userquestionFirstlove" />
    <result column="register_time" jdbcType="VARCHAR" property="registerTime" />
    <result column="account_state" jdbcType="INTEGER" property="accountState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, user_psw, user_sex, user_grade, user_hobby, user_tel, user_email, 
    user_address, self_introduce, self_blessing, userQuestion_motherName, userQuestion_firstLove, 
    register_time, account_state
  </sql>
  <select id="selectByExample" parameterType="cn.net.colin.entity.sysManage.UserInfoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.net.colin.entity.sysManage.UserInfoCriteria">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.net.colin.entity.sysManage.UserInfo">
    insert into user_info (user_id, user_name, user_psw, 
      user_sex, user_grade, user_hobby, 
      user_tel, user_email, user_address, 
      self_introduce, self_blessing, userQuestion_motherName, 
      userQuestion_firstLove, register_time, account_state
      )
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userPsw,jdbcType=VARCHAR}, 
      #{userSex,jdbcType=VARCHAR}, #{userGrade,jdbcType=VARCHAR}, #{userHobby,jdbcType=VARCHAR}, 
      #{userTel,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userAddress,jdbcType=VARCHAR}, 
      #{selfIntroduce,jdbcType=VARCHAR}, #{selfBlessing,jdbcType=VARCHAR}, #{userquestionMothername,jdbcType=VARCHAR}, 
      #{userquestionFirstlove,jdbcType=VARCHAR}, #{registerTime,jdbcType=VARCHAR}, #{accountState,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.net.colin.entity.sysManage.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPsw != null">
        user_psw,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userGrade != null">
        user_grade,
      </if>
      <if test="userHobby != null">
        user_hobby,
      </if>
      <if test="userTel != null">
        user_tel,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="selfIntroduce != null">
        self_introduce,
      </if>
      <if test="selfBlessing != null">
        self_blessing,
      </if>
      <if test="userquestionMothername != null">
        userQuestion_motherName,
      </if>
      <if test="userquestionFirstlove != null">
        userQuestion_firstLove,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="accountState != null">
        account_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPsw != null">
        #{userPsw,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userGrade != null">
        #{userGrade,jdbcType=VARCHAR},
      </if>
      <if test="userHobby != null">
        #{userHobby,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="selfIntroduce != null">
        #{selfIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="selfBlessing != null">
        #{selfBlessing,jdbcType=VARCHAR},
      </if>
      <if test="userquestionMothername != null">
        #{userquestionMothername,jdbcType=VARCHAR},
      </if>
      <if test="userquestionFirstlove != null">
        #{userquestionFirstlove,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=VARCHAR},
      </if>
      <if test="accountState != null">
        #{accountState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into user_info (user_id, user_name, user_psw, 
      user_sex, user_grade, user_hobby, 
      user_tel, user_email, user_address, 
      self_introduce, self_blessing, 
      userQuestion_motherName, userQuestion_firstLove, 
      register_time, account_state)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.userId,jdbcType=VARCHAR}, #{item.userName,jdbcType=VARCHAR}, #{item.userPsw,jdbcType=VARCHAR}, 
        #{item.userSex,jdbcType=VARCHAR}, #{item.userGrade,jdbcType=VARCHAR}, #{item.userHobby,jdbcType=VARCHAR}, 
        #{item.userTel,jdbcType=VARCHAR}, #{item.userEmail,jdbcType=VARCHAR}, #{item.userAddress,jdbcType=VARCHAR}, 
        #{item.selfIntroduce,jdbcType=VARCHAR}, #{item.selfBlessing,jdbcType=VARCHAR}, 
        #{item.userquestionMothername,jdbcType=VARCHAR}, #{item.userquestionFirstlove,jdbcType=VARCHAR}, 
        #{item.registerTime,jdbcType=VARCHAR}, #{item.accountState,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into user_info
    (user_id, user_name, user_psw, user_sex, user_grade, user_hobby, user_tel, user_email, 
      user_address, self_introduce, self_blessing, userQuestion_motherName, userQuestion_firstLove, 
      register_time, account_state)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.userId != null">
          #{item.userId,jdbcType=VARCHAR},
        </if>
        <if test="item.userId == null">
          NULL,
        </if>
        <if test="item.userName != null">
          #{item.userName,jdbcType=VARCHAR},
        </if>
        <if test="item.userName == null">
          NULL,
        </if>
        <if test="item.userPsw != null">
          #{item.userPsw,jdbcType=VARCHAR},
        </if>
        <if test="item.userPsw == null">
          NULL,
        </if>
        <if test="item.userSex != null">
          #{item.userSex,jdbcType=VARCHAR},
        </if>
        <if test="item.userSex == null">
          NULL,
        </if>
        <if test="item.userGrade != null">
          #{item.userGrade,jdbcType=VARCHAR},
        </if>
        <if test="item.userGrade == null">
          NULL,
        </if>
        <if test="item.userHobby != null">
          #{item.userHobby,jdbcType=VARCHAR},
        </if>
        <if test="item.userHobby == null">
          NULL,
        </if>
        <if test="item.userTel != null">
          #{item.userTel,jdbcType=VARCHAR},
        </if>
        <if test="item.userTel == null">
          NULL,
        </if>
        <if test="item.userEmail != null">
          #{item.userEmail,jdbcType=VARCHAR},
        </if>
        <if test="item.userEmail == null">
          NULL,
        </if>
        <if test="item.userAddress != null">
          #{item.userAddress,jdbcType=VARCHAR},
        </if>
        <if test="item.userAddress == null">
          NULL,
        </if>
        <if test="item.selfIntroduce != null">
          #{item.selfIntroduce,jdbcType=VARCHAR},
        </if>
        <if test="item.selfIntroduce == null">
          NULL,
        </if>
        <if test="item.selfBlessing != null">
          #{item.selfBlessing,jdbcType=VARCHAR},
        </if>
        <if test="item.selfBlessing == null">
          NULL,
        </if>
        <if test="item.userquestionMothername != null">
          #{item.userquestionMothername,jdbcType=VARCHAR},
        </if>
        <if test="item.userquestionMothername == null">
          NULL,
        </if>
        <if test="item.userquestionFirstlove != null">
          #{item.userquestionFirstlove,jdbcType=VARCHAR},
        </if>
        <if test="item.userquestionFirstlove == null">
          NULL,
        </if>
        <if test="item.registerTime != null">
          #{item.registerTime,jdbcType=VARCHAR},
        </if>
        <if test="item.registerTime == null">
          NULL,
        </if>
        <if test="item.accountState != null">
          #{item.accountState,jdbcType=INTEGER},
        </if>
        <if test="item.accountState == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <select id="countByExample" parameterType="cn.net.colin.entity.sysManage.UserInfoCriteria" resultType="java.lang.Long">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPsw != null">
        user_psw = #{record.userPsw,jdbcType=VARCHAR},
      </if>
      <if test="record.userSex != null">
        user_sex = #{record.userSex,jdbcType=VARCHAR},
      </if>
      <if test="record.userGrade != null">
        user_grade = #{record.userGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.userHobby != null">
        user_hobby = #{record.userHobby,jdbcType=VARCHAR},
      </if>
      <if test="record.userTel != null">
        user_tel = #{record.userTel,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userAddress != null">
        user_address = #{record.userAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.selfIntroduce != null">
        self_introduce = #{record.selfIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.selfBlessing != null">
        self_blessing = #{record.selfBlessing,jdbcType=VARCHAR},
      </if>
      <if test="record.userquestionMothername != null">
        userQuestion_motherName = #{record.userquestionMothername,jdbcType=VARCHAR},
      </if>
      <if test="record.userquestionFirstlove != null">
        userQuestion_firstLove = #{record.userquestionFirstlove,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null">
        register_time = #{record.registerTime,jdbcType=VARCHAR},
      </if>
      <if test="record.accountState != null">
        account_state = #{record.accountState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set user_id = #{record.userId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_psw = #{record.userPsw,jdbcType=VARCHAR},
      user_sex = #{record.userSex,jdbcType=VARCHAR},
      user_grade = #{record.userGrade,jdbcType=VARCHAR},
      user_hobby = #{record.userHobby,jdbcType=VARCHAR},
      user_tel = #{record.userTel,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_address = #{record.userAddress,jdbcType=VARCHAR},
      self_introduce = #{record.selfIntroduce,jdbcType=VARCHAR},
      self_blessing = #{record.selfBlessing,jdbcType=VARCHAR},
      userQuestion_motherName = #{record.userquestionMothername,jdbcType=VARCHAR},
      userQuestion_firstLove = #{record.userquestionFirstlove,jdbcType=VARCHAR},
      register_time = #{record.registerTime,jdbcType=VARCHAR},
      account_state = #{record.accountState,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.colin.entity.sysManage.UserInfo">
    update user_info
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPsw != null">
        user_psw = #{userPsw,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userGrade != null">
        user_grade = #{userGrade,jdbcType=VARCHAR},
      </if>
      <if test="userHobby != null">
        user_hobby = #{userHobby,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        user_tel = #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="selfIntroduce != null">
        self_introduce = #{selfIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="selfBlessing != null">
        self_blessing = #{selfBlessing,jdbcType=VARCHAR},
      </if>
      <if test="userquestionMothername != null">
        userQuestion_motherName = #{userquestionMothername,jdbcType=VARCHAR},
      </if>
      <if test="userquestionFirstlove != null">
        userQuestion_firstLove = #{userquestionFirstlove,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=VARCHAR},
      </if>
      <if test="accountState != null">
        account_state = #{accountState,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.colin.entity.sysManage.UserInfo">
    update user_info
    set user_name = #{userName,jdbcType=VARCHAR},
      user_psw = #{userPsw,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=VARCHAR},
      user_grade = #{userGrade,jdbcType=VARCHAR},
      user_hobby = #{userHobby,jdbcType=VARCHAR},
      user_tel = #{userTel,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_address = #{userAddress,jdbcType=VARCHAR},
      self_introduce = #{selfIntroduce,jdbcType=VARCHAR},
      self_blessing = #{selfBlessing,jdbcType=VARCHAR},
      userQuestion_motherName = #{userquestionMothername,jdbcType=VARCHAR},
      userQuestion_firstLove = #{userquestionFirstlove,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=VARCHAR},
      account_state = #{accountState,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update user_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userName}
        </foreach>
      </trim>
      <trim prefix="user_psw =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userPsw}
        </foreach>
      </trim>
      <trim prefix="user_sex =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userSex}
        </foreach>
      </trim>
      <trim prefix="user_grade =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userGrade}
        </foreach>
      </trim>
      <trim prefix="user_hobby =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userHobby}
        </foreach>
      </trim>
      <trim prefix="user_tel =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userTel}
        </foreach>
      </trim>
      <trim prefix="user_email =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userEmail}
        </foreach>
      </trim>
      <trim prefix="user_address =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userAddress}
        </foreach>
      </trim>
      <trim prefix="self_introduce =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.selfIntroduce}
        </foreach>
      </trim>
      <trim prefix="self_blessing =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.selfBlessing}
        </foreach>
      </trim>
      <trim prefix="userQuestion_motherName =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userquestionMothername}
        </foreach>
      </trim>
      <trim prefix="userQuestion_firstLove =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userquestionFirstlove}
        </foreach>
      </trim>
      <trim prefix="register_time =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.registerTime}
        </foreach>
      </trim>
      <trim prefix="account_state =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.accountState}
        </foreach>
      </trim>
    </trim>
    where user_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.userId} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update user_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userName != null ">
            when  #{item.userId} then #{item.userName}
          </if>
          <if test="item.userName == null ">
            when  #{item.userId} then user_info.user_name
          </if>
        </foreach>
      </trim>
      <trim prefix="user_psw =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userPsw != null ">
            when  #{item.userId} then #{item.userPsw}
          </if>
          <if test="item.userPsw == null ">
            when  #{item.userId} then user_info.user_psw
          </if>
        </foreach>
      </trim>
      <trim prefix="user_sex =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userSex != null ">
            when  #{item.userId} then #{item.userSex}
          </if>
          <if test="item.userSex == null ">
            when  #{item.userId} then user_info.user_sex
          </if>
        </foreach>
      </trim>
      <trim prefix="user_grade =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userGrade != null ">
            when  #{item.userId} then #{item.userGrade}
          </if>
          <if test="item.userGrade == null ">
            when  #{item.userId} then user_info.user_grade
          </if>
        </foreach>
      </trim>
      <trim prefix="user_hobby =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userHobby != null ">
            when  #{item.userId} then #{item.userHobby}
          </if>
          <if test="item.userHobby == null ">
            when  #{item.userId} then user_info.user_hobby
          </if>
        </foreach>
      </trim>
      <trim prefix="user_tel =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userTel != null ">
            when  #{item.userId} then #{item.userTel}
          </if>
          <if test="item.userTel == null ">
            when  #{item.userId} then user_info.user_tel
          </if>
        </foreach>
      </trim>
      <trim prefix="user_email =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userEmail != null ">
            when  #{item.userId} then #{item.userEmail}
          </if>
          <if test="item.userEmail == null ">
            when  #{item.userId} then user_info.user_email
          </if>
        </foreach>
      </trim>
      <trim prefix="user_address =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userAddress != null ">
            when  #{item.userId} then #{item.userAddress}
          </if>
          <if test="item.userAddress == null ">
            when  #{item.userId} then user_info.user_address
          </if>
        </foreach>
      </trim>
      <trim prefix="self_introduce =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.selfIntroduce != null ">
            when  #{item.userId} then #{item.selfIntroduce}
          </if>
          <if test="item.selfIntroduce == null ">
            when  #{item.userId} then user_info.self_introduce
          </if>
        </foreach>
      </trim>
      <trim prefix="self_blessing =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.selfBlessing != null ">
            when  #{item.userId} then #{item.selfBlessing}
          </if>
          <if test="item.selfBlessing == null ">
            when  #{item.userId} then user_info.self_blessing
          </if>
        </foreach>
      </trim>
      <trim prefix="userQuestion_motherName =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userquestionMothername != null ">
            when  #{item.userId} then #{item.userquestionMothername}
          </if>
          <if test="item.userquestionMothername == null ">
            when  #{item.userId} then user_info.userQuestion_motherName
          </if>
        </foreach>
      </trim>
      <trim prefix="userQuestion_firstLove =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userquestionFirstlove != null ">
            when  #{item.userId} then #{item.userquestionFirstlove}
          </if>
          <if test="item.userquestionFirstlove == null ">
            when  #{item.userId} then user_info.userQuestion_firstLove
          </if>
        </foreach>
      </trim>
      <trim prefix="register_time =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.registerTime != null ">
            when  #{item.userId} then #{item.registerTime}
          </if>
          <if test="item.registerTime == null ">
            when  #{item.userId} then user_info.register_time
          </if>
        </foreach>
      </trim>
      <trim prefix="account_state =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.accountState != null ">
            when  #{item.userId} then #{item.accountState}
          </if>
          <if test="item.accountState == null ">
            when  #{item.userId} then user_info.account_state
          </if>
        </foreach>
      </trim>
    </trim>
    where user_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.userId} 
    </foreach>
  </update>
  <update id="updateBatchByExample" parameterType="map">
    update user_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userName}
        </foreach>
      </trim>
      <trim prefix="user_psw =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userPsw}
        </foreach>
      </trim>
      <trim prefix="user_sex =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userSex}
        </foreach>
      </trim>
      <trim prefix="user_grade =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userGrade}
        </foreach>
      </trim>
      <trim prefix="user_hobby =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userHobby}
        </foreach>
      </trim>
      <trim prefix="user_tel =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userTel}
        </foreach>
      </trim>
      <trim prefix="user_email =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userEmail}
        </foreach>
      </trim>
      <trim prefix="user_address =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userAddress}
        </foreach>
      </trim>
      <trim prefix="self_introduce =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.selfIntroduce}
        </foreach>
      </trim>
      <trim prefix="self_blessing =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.selfBlessing}
        </foreach>
      </trim>
      <trim prefix="userQuestion_motherName =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userquestionMothername}
        </foreach>
      </trim>
      <trim prefix="userQuestion_firstLove =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userquestionFirstlove}
        </foreach>
      </trim>
      <trim prefix="register_time =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.registerTime}
        </foreach>
      </trim>
      <trim prefix="account_state =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.accountState}
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatchByExampleSelective" parameterType="map">
    update user_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.userName != null ">
            when  #{item.userId} then #{item.userName}
          </if>
          <if test="item.userName == null ">
            when  #{item.userId} then user_info.user_name
          </if>
        </foreach>
      </trim>
      <trim prefix="user_psw =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.userPsw != null ">
            when  #{item.userId} then #{item.userPsw}
          </if>
          <if test="item.userPsw == null ">
            when  #{item.userId} then user_info.user_psw
          </if>
        </foreach>
      </trim>
      <trim prefix="user_sex =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.userSex != null ">
            when  #{item.userId} then #{item.userSex}
          </if>
          <if test="item.userSex == null ">
            when  #{item.userId} then user_info.user_sex
          </if>
        </foreach>
      </trim>
      <trim prefix="user_grade =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.userGrade != null ">
            when  #{item.userId} then #{item.userGrade}
          </if>
          <if test="item.userGrade == null ">
            when  #{item.userId} then user_info.user_grade
          </if>
        </foreach>
      </trim>
      <trim prefix="user_hobby =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.userHobby != null ">
            when  #{item.userId} then #{item.userHobby}
          </if>
          <if test="item.userHobby == null ">
            when  #{item.userId} then user_info.user_hobby
          </if>
        </foreach>
      </trim>
      <trim prefix="user_tel =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.userTel != null ">
            when  #{item.userId} then #{item.userTel}
          </if>
          <if test="item.userTel == null ">
            when  #{item.userId} then user_info.user_tel
          </if>
        </foreach>
      </trim>
      <trim prefix="user_email =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.userEmail != null ">
            when  #{item.userId} then #{item.userEmail}
          </if>
          <if test="item.userEmail == null ">
            when  #{item.userId} then user_info.user_email
          </if>
        </foreach>
      </trim>
      <trim prefix="user_address =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.userAddress != null ">
            when  #{item.userId} then #{item.userAddress}
          </if>
          <if test="item.userAddress == null ">
            when  #{item.userId} then user_info.user_address
          </if>
        </foreach>
      </trim>
      <trim prefix="self_introduce =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.selfIntroduce != null ">
            when  #{item.userId} then #{item.selfIntroduce}
          </if>
          <if test="item.selfIntroduce == null ">
            when  #{item.userId} then user_info.self_introduce
          </if>
        </foreach>
      </trim>
      <trim prefix="self_blessing =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.selfBlessing != null ">
            when  #{item.userId} then #{item.selfBlessing}
          </if>
          <if test="item.selfBlessing == null ">
            when  #{item.userId} then user_info.self_blessing
          </if>
        </foreach>
      </trim>
      <trim prefix="userQuestion_motherName =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.userquestionMothername != null ">
            when  #{item.userId} then #{item.userquestionMothername}
          </if>
          <if test="item.userquestionMothername == null ">
            when  #{item.userId} then user_info.userQuestion_motherName
          </if>
        </foreach>
      </trim>
      <trim prefix="userQuestion_firstLove =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.userquestionFirstlove != null ">
            when  #{item.userId} then #{item.userquestionFirstlove}
          </if>
          <if test="item.userquestionFirstlove == null ">
            when  #{item.userId} then user_info.userQuestion_firstLove
          </if>
        </foreach>
      </trim>
      <trim prefix="register_time =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.registerTime != null ">
            when  #{item.userId} then #{item.registerTime}
          </if>
          <if test="item.registerTime == null ">
            when  #{item.userId} then user_info.register_time
          </if>
        </foreach>
      </trim>
      <trim prefix="account_state =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.accountState != null ">
            when  #{item.userId} then #{item.accountState}
          </if>
          <if test="item.accountState == null ">
            when  #{item.userId} then user_info.account_state
          </if>
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.net.colin.dao.sysManage.HistoryorderInfoDAO">
  <resultMap id="BaseResultMap" type="cn.net.colin.entity.sysManage.HistoryorderInfo">
    <id column="id-auto" jdbcType="INTEGER" property="idAuto" />
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="goods_id" jdbcType="VARCHAR" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="selectedQuantity" jdbcType="INTEGER" property="selectedquantity" />
    <result column="subtotal" jdbcType="DOUBLE" property="subtotal" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id-auto`, order_id, goods_id, goods_name, selectedQuantity, subtotal
  </sql>
  <select id="selectByExample" parameterType="cn.net.colin.entity.sysManage.HistoryorderInfoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from historyorder_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.net.colin.entity.sysManage.HistoryorderInfoKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from historyorder_info
    where `id-auto` = #{idAuto,jdbcType=INTEGER}
      and order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.net.colin.entity.sysManage.HistoryorderInfoKey">
    delete from historyorder_info
    where `id-auto` = #{idAuto,jdbcType=INTEGER}
      and order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.net.colin.entity.sysManage.HistoryorderInfoCriteria">
    delete from historyorder_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.net.colin.entity.sysManage.HistoryorderInfo">
    insert into historyorder_info (`id-auto`, order_id, goods_id,
      goods_name, selectedQuantity, subtotal
      )
    values (#{idAuto,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{goodsId,jdbcType=VARCHAR}, 
      #{goodsName,jdbcType=VARCHAR}, #{selectedquantity,jdbcType=INTEGER}, #{subtotal,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.net.colin.entity.sysManage.HistoryorderInfo">
    insert into historyorder_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idAuto != null">
        `id-auto`,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="selectedquantity != null">
        selectedQuantity,
      </if>
      <if test="subtotal != null">
        subtotal,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idAuto != null">
        #{idAuto,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="selectedquantity != null">
        #{selectedquantity,jdbcType=INTEGER},
      </if>
      <if test="subtotal != null">
        #{subtotal,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into historyorder_info (`id-auto`, order_id, goods_id,
      goods_name, selectedQuantity, 
      subtotal)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.idAuto,jdbcType=INTEGER}, #{item.orderId,jdbcType=VARCHAR}, #{item.goodsId,jdbcType=VARCHAR}, 
        #{item.goodsName,jdbcType=VARCHAR}, #{item.selectedquantity,jdbcType=INTEGER}, 
        #{item.subtotal,jdbcType=DOUBLE})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into historyorder_info
    (`id-auto`, order_id, goods_id, goods_name, selectedQuantity, subtotal)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.idAuto != null">
          #{item.idAuto,jdbcType=INTEGER},
        </if>
        <if test="item.idAuto == null">
          NULL,
        </if>
        <if test="item.orderId != null">
          #{item.orderId,jdbcType=VARCHAR},
        </if>
        <if test="item.orderId == null">
          NULL,
        </if>
        <if test="item.goodsId != null">
          #{item.goodsId,jdbcType=VARCHAR},
        </if>
        <if test="item.goodsId == null">
          NULL,
        </if>
        <if test="item.goodsName != null">
          #{item.goodsName,jdbcType=VARCHAR},
        </if>
        <if test="item.goodsName == null">
          NULL,
        </if>
        <if test="item.selectedquantity != null">
          #{item.selectedquantity,jdbcType=INTEGER},
        </if>
        <if test="item.selectedquantity == null">
          NULL,
        </if>
        <if test="item.subtotal != null">
          #{item.subtotal,jdbcType=DOUBLE},
        </if>
        <if test="item.subtotal == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <select id="countByExample" parameterType="cn.net.colin.entity.sysManage.HistoryorderInfoCriteria" resultType="java.lang.Long">
    select count(*) from historyorder_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update historyorder_info
    <set>
      <if test="record.idAuto != null">
        `id-auto` = #{record.idAuto,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.selectedquantity != null">
        selectedQuantity = #{record.selectedquantity,jdbcType=INTEGER},
      </if>
      <if test="record.subtotal != null">
        subtotal = #{record.subtotal,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update historyorder_info
    set `id-auto` = #{record.idAuto,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      selectedQuantity = #{record.selectedquantity,jdbcType=INTEGER},
      subtotal = #{record.subtotal,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.colin.entity.sysManage.HistoryorderInfo">
    update historyorder_info
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="selectedquantity != null">
        selectedQuantity = #{selectedquantity,jdbcType=INTEGER},
      </if>
      <if test="subtotal != null">
        subtotal = #{subtotal,jdbcType=DOUBLE},
      </if>
    </set>
    where `id-auto` = #{idAuto,jdbcType=INTEGER}
      and order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.colin.entity.sysManage.HistoryorderInfo">
    update historyorder_info
    set goods_id = #{goodsId,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      selectedQuantity = #{selectedquantity,jdbcType=INTEGER},
      subtotal = #{subtotal,jdbcType=DOUBLE}
    where `id-auto` = #{idAuto,jdbcType=INTEGER}
      and order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update historyorder_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="goods_id =case `id-auto`" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.idAuto} then #{item.goodsId}
        </foreach>
      </trim>
      <trim prefix="goods_name =case `id-auto`" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.idAuto} then #{item.goodsName}
        </foreach>
      </trim>
      <trim prefix="selectedQuantity =case `id-auto`" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.idAuto} then #{item.selectedquantity}
        </foreach>
      </trim>
      <trim prefix="subtotal =case `id-auto`" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.idAuto} then #{item.subtotal}
        </foreach>
      </trim>
    </trim>
    where `id-auto` in
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.idAuto} 
    </foreach>
      and where order_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.orderId} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update historyorder_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="goods_id =case `id-auto`" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.goodsId != null ">
            when  #{item.idAuto} then #{item.goodsId}
          </if>
          <if test="item.goodsId == null ">
            when  #{item.idAuto} then historyorder_info.goods_id
          </if>
        </foreach>
      </trim>
      <trim prefix="goods_name =case `id-auto`" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.goodsName != null ">
            when  #{item.idAuto} then #{item.goodsName}
          </if>
          <if test="item.goodsName == null ">
            when  #{item.idAuto} then historyorder_info.goods_name
          </if>
        </foreach>
      </trim>
      <trim prefix="selectedQuantity =case `id-auto`" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.selectedquantity != null ">
            when  #{item.idAuto} then #{item.selectedquantity}
          </if>
          <if test="item.selectedquantity == null ">
            when  #{item.idAuto} then historyorder_info.selectedQuantity
          </if>
        </foreach>
      </trim>
      <trim prefix="subtotal =case `id-auto`" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.subtotal != null ">
            when  #{item.idAuto} then #{item.subtotal}
          </if>
          <if test="item.subtotal == null ">
            when  #{item.idAuto} then historyorder_info.subtotal
          </if>
        </foreach>
      </trim>
    </trim>
    where `id-auto` in
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.idAuto} 
    </foreach>
      and where order_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.orderId} 
    </foreach>
  </update>
  <update id="updateBatchByExample" parameterType="map">
    update historyorder_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="goods_id =case `id-auto`" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.idAuto} then #{item.goodsId}
        </foreach>
      </trim>
      <trim prefix="goods_name =case `id-auto`" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.idAuto} then #{item.goodsName}
        </foreach>
      </trim>
      <trim prefix="selectedQuantity =case `id-auto`" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.idAuto} then #{item.selectedquantity}
        </foreach>
      </trim>
      <trim prefix="subtotal =case `id-auto`" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.idAuto} then #{item.subtotal}
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatchByExampleSelective" parameterType="map">
    update historyorder_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="goods_id =case `id-auto`" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.goodsId != null ">
            when  #{item.idAuto} then #{item.goodsId}
          </if>
          <if test="item.goodsId == null ">
            when  #{item.idAuto} then historyorder_info.goods_id
          </if>
        </foreach>
      </trim>
      <trim prefix="goods_name =case `id-auto`" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.goodsName != null ">
            when  #{item.idAuto} then #{item.goodsName}
          </if>
          <if test="item.goodsName == null ">
            when  #{item.idAuto} then historyorder_info.goods_name
          </if>
        </foreach>
      </trim>
      <trim prefix="selectedQuantity =case `id-auto`" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.selectedquantity != null ">
            when  #{item.idAuto} then #{item.selectedquantity}
          </if>
          <if test="item.selectedquantity == null ">
            when  #{item.idAuto} then historyorder_info.selectedQuantity
          </if>
        </foreach>
      </trim>
      <trim prefix="subtotal =case `id-auto`" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.subtotal != null ">
            when  #{item.idAuto} then #{item.subtotal}
          </if>
          <if test="item.subtotal == null ">
            when  #{item.idAuto} then historyorder_info.subtotal
          </if>
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>